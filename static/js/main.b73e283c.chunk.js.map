{"version":3,"sources":["assets/icons/robotic.svg","ActionProvider.js","MessageParser.js","components/HelpingOptions/HelpingOptions.jsx","components/LinkList/LinkList.jsx","assets/icons/Onela.svg","components/BotAvatar/BotAvatar.jsx","config.js","App.js","reportWebVitals.js","index.js"],"names":["ActionProvider","createChatBotMessage","setStateFunc","createClientMessage","handleAlimentationList","message","widget","updateChatbotState","handleDefault","withAvatar","this","setState","greetingMessage","prevState","messages","MessageParser","actionProvider","state","lowerCaseMessage","toLowerCase","includes","greet","HelpingOptions","props","optionsMarkup","text","handler","id","map","option","className","onClick","LinkList","linkMarkup","options","link","href","url","target","rel","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","stroke","fill","fillRule","SvgOnela","_ref","svgRef","title","titleId","xmlns","xmlnsXlink","width","height","viewBox","ref","ForwardRef","BotAvatar","botName","config","initialMessages","delay","customComponents","header","class","botAvatar","customStyles","botMessageBox","backgroundColor","chatButton","widgets","widgetName","widgetFunc","App","useState","showBot","toggleBot","messageParser","placeholderText","prev","src","Image","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b73e283c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/robotic.451bbcbc.svg\";","// ActionProvider starter code\r\nclass ActionProvider {\r\n    constructor(createChatBotMessage, setStateFunc, createClientMessage) {\r\n      this.createChatBotMessage = createChatBotMessage;\r\n      this.setState = setStateFunc;\r\n      this.createClientMessage = createClientMessage;\r\n    }\r\n\r\n    greet() {\r\n        const greetingMessage = this.createChatBotMessage(\"Salut l'ami\")\r\n        this.updateChatbotState(greetingMessage)\r\n    }\r\n\r\n    handleAlimentationList = () => {\r\n        const message = this.createChatBotMessage(\r\n          \"Voici quelques aides pour subvenir à vos besoins en alimentation:\",\r\n          {\r\n            widget: \"AlimentationLinks\",\r\n          }\r\n        );\r\n    \r\n        this.updateChatbotState(message);\r\n    };\r\n\r\n    handleDefault = () => {\r\n      const message = this.createChatBotMessage(\r\n        \"Je n'ai pas compris votre demande. Comment puis-je vous aider?\", \r\n        {\r\n          withAvatar: true,\r\n        }\r\n      );\r\n  \r\n      this.updateChatbotState(message)\r\n    };\r\n\r\n    updateChatbotState(message) {\r\n \r\n        // NOTE: This function is set in the constructor, and is passed in      \r\n        // from the top level Chatbot component. The setState function here     \r\n        // actually manipulates the top level state of the Chatbot, so it's     \r\n        // important that we make sure that we preserve the previous state. \r\n        this.setState(prevState => ({\r\n                ...prevState, messages: [...prevState.messages, message]\r\n        }))\r\n    }\r\n}\r\n  \r\nexport default ActionProvider;","// MessageParser starter code\r\nclass MessageParser {\r\n    constructor(actionProvider, state) {\r\n        this.actionProvider = actionProvider;\r\n        this.state = state;\r\n    }\r\n  \r\n    parse(message) {\r\n        const lowerCaseMessage = message.toLowerCase()\r\n        \r\n        if (lowerCaseMessage.includes(\"bonjour\") || lowerCaseMessage.includes(\"salut\")) {\r\n          this.actionProvider.greet()\r\n        }\r\n\r\n        if (lowerCaseMessage.includes(\"alimentation\")) {\r\n          this.actionProvider.handleAlimentationList();\r\n        }\r\n\r\n        if (lowerCaseMessage.includes(\" \")) {\r\n          this.actionProvider.handleDefault();\r\n        }\r\n    }\r\n}\r\n  \r\n  export default MessageParser;","import React from \"react\";\r\n\r\nimport \"./HelpingOptions.css\";\r\n\r\nconst HelpingOptions = (props) => {\r\n    const options = [\r\n        {\r\n            text: \"Alimentation\",\r\n            handler: props.actionProvider.handleAlimentationList,\r\n            id: 1,\r\n        },\r\n        { text: \"Logement\", handler: () => {}, id: 2 },\r\n        { text: \"Finance\", handler: () => {}, id: 3 },\r\n        { text: \"Santé\", handler: () => {}, id: 4 },\r\n        { text: \"Social\", handler: () => {}, id: 5 },\r\n    ];\r\n\r\n    const optionsMarkup = options.map((option) => (\r\n        <button className=\"helping-option-button\" key={option.id} onClick={option.handler}>\r\n            {option.text}\r\n        </button>\r\n    ));\r\n\r\n    return <div className=\"helping-options-container\">{optionsMarkup}</div>;\r\n};\r\n\r\nexport default HelpingOptions;","import React from \"react\";\r\n\r\nimport \"./LinkList.css\";\r\n\r\nconst LinkList = (props) => {\r\n  const linkMarkup = props.options.map((link) => (\r\n    <li key={link.id} className=\"link-list-item\">\r\n      <a\r\n        href={link.url}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className=\"link-list-item-url\"\r\n      >\r\n        {link.text}\r\n      </a>\r\n    </li>\r\n  ));\r\n\r\n  return <ul className=\"link-list\">{linkMarkup}</ul>;\r\n};\r\n\r\nexport default LinkList;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"svgg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  id: \"path0\",\n  d: \"M113.931 238.403 C 106.347 245.988,100.141 252.322,100.141 252.477 C 100.141 252.633,106.888 259.506,115.135 267.751 L 130.128 282.743 144.200 268.670 L 158.273 254.598 143.282 239.604 C 135.037 231.358,128.162 224.611,128.006 224.611 C 127.849 224.611,121.515 230.817,113.931 238.403 M183.728 308.489 L 169.861 322.478 184.963 337.581 L 200.065 352.683 213.682 339.048 C 221.171 331.549,227.480 325.193,227.703 324.922 C 228.100 324.439,198.728 294.468,197.879 294.492 C 197.723 294.496,191.355 300.795,183.728 308.489 \",\n  stroke: \"none\",\n  fill: \"#e28807\",\n  fillRule: \"evenodd\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"path1\",\n  d: \"M269.453 51.716 C 269.381 51.788,268.523 51.891,267.547 51.945 C 265.038 52.083,262.441 52.380,260.396 52.764 C 259.929 52.851,259.070 52.949,258.487 52.982 C 257.903 53.014,257.426 53.115,257.426 53.206 C 257.426 53.297,257.267 53.381,257.072 53.393 C 256.170 53.449,254.949 53.710,254.204 54.006 C 253.755 54.184,253.329 54.272,253.259 54.202 C 253.189 54.132,252.634 54.250,252.025 54.464 C 251.417 54.679,250.919 54.799,250.919 54.730 C 250.919 54.661,250.278 54.858,249.494 55.167 C 248.711 55.476,247.836 55.728,247.549 55.728 C 247.263 55.728,246.295 56.053,245.397 56.450 C 244.500 56.847,243.586 57.103,243.367 57.019 C 243.116 56.923,243.044 56.987,243.172 57.194 C 243.307 57.413,243.218 57.462,242.904 57.341 C 242.645 57.242,242.433 57.291,242.433 57.451 C 242.433 57.611,242.306 57.663,242.150 57.567 C 241.994 57.471,241.867 57.541,241.867 57.722 C 241.867 57.904,241.676 57.979,241.443 57.889 C 241.209 57.800,241.018 57.857,241.018 58.017 C 241.018 58.177,240.891 58.229,240.736 58.133 C 240.580 58.037,240.453 58.089,240.453 58.249 C 240.453 58.409,240.278 58.473,240.065 58.391 C 239.851 58.309,239.501 58.408,239.287 58.612 C 239.072 58.815,238.642 59.025,238.331 59.078 C 238.020 59.131,237.723 59.291,237.670 59.434 C 237.618 59.576,237.459 59.620,237.317 59.532 C 237.174 59.445,237.058 59.521,237.058 59.702 C 237.058 59.884,236.867 59.959,236.634 59.869 C 236.400 59.780,236.209 59.813,236.209 59.943 C 236.209 60.197,232.248 62.089,231.895 62.003 C 231.779 61.975,231.683 62.084,231.683 62.245 C 231.683 62.406,231.081 62.796,230.345 63.111 C 229.609 63.427,228.941 63.780,228.860 63.895 C 228.779 64.011,228.299 64.273,227.793 64.478 C 227.288 64.682,226.874 64.960,226.874 65.094 C 226.874 65.229,226.401 65.537,225.823 65.778 C 225.245 66.020,224.704 66.308,224.621 66.419 C 224.538 66.530,223.897 67.003,223.197 67.469 C 222.496 67.935,221.769 68.444,221.580 68.600 C 220.857 69.195,220.470 69.475,219.236 70.295 C 218.536 70.760,217.705 71.429,217.388 71.780 C 217.072 72.131,216.655 72.419,216.460 72.419 C 216.266 72.419,216.033 72.610,215.944 72.843 C 215.854 73.076,215.675 73.267,215.546 73.267 C 215.180 73.267,204.243 83.852,204.243 84.207 C 204.243 84.436,335.820 216.407,336.048 216.407 C 336.270 216.407,343.898 208.861,345.045 207.506 C 345.475 206.998,346.337 205.966,346.959 205.211 C 347.581 204.457,348.441 203.475,348.868 203.030 C 349.296 202.584,349.646 202.096,349.646 201.946 C 349.646 201.795,349.933 201.377,350.283 201.016 C 350.633 200.656,351.110 200.077,351.344 199.730 C 351.577 199.383,351.987 198.841,352.255 198.526 C 352.522 198.210,352.817 197.713,352.910 197.420 C 353.003 197.128,353.183 196.888,353.310 196.888 C 353.437 196.888,353.616 196.665,353.707 196.393 C 353.869 195.912,354.453 194.911,354.738 194.625 C 355.230 194.134,359.264 186.671,359.264 186.253 C 359.264 186.061,359.360 185.860,359.477 185.809 C 359.675 185.720,360.214 184.663,360.893 183.027 C 361.473 181.631,362.136 180.046,362.373 179.491 C 363.467 176.922,365.588 170.124,366.299 166.902 C 367.452 161.685,367.633 160.569,368.461 153.595 C 369.217 147.228,368.864 138.497,367.489 129.562 C 366.269 121.631,362.893 111.280,359.001 103.536 C 357.586 100.720,357.208 100.034,355.416 97.030 C 354.813 96.018,354.191 94.974,354.034 94.708 C 353.406 93.646,351.432 90.872,350.402 89.604 C 349.802 88.865,349.396 88.260,349.499 88.260 C 349.909 88.260,344.366 82.229,340.265 78.213 C 335.794 73.835,331.519 69.973,331.970 70.721 C 332.111 70.955,331.499 70.526,330.611 69.768 C 329.723 69.010,328.996 68.477,328.996 68.584 C 328.996 68.691,328.442 68.325,327.764 67.770 C 327.087 67.215,326.436 66.761,326.317 66.761 C 326.198 66.761,325.480 66.305,324.720 65.747 C 323.960 65.189,323.338 64.814,323.338 64.913 C 323.338 65.011,322.912 64.768,322.392 64.371 C 321.872 63.974,321.318 63.649,321.161 63.649 C 321.005 63.649,320.349 63.267,319.703 62.799 C 319.057 62.331,318.529 62.008,318.529 62.080 C 318.529 62.152,317.924 61.908,317.185 61.537 C 316.446 61.165,315.778 60.874,315.700 60.889 C 315.622 60.904,315.018 60.575,314.356 60.158 C 313.695 59.740,313.154 59.479,313.154 59.576 C 313.154 59.674,312.836 59.545,312.447 59.291 C 312.058 59.036,311.740 58.904,311.740 58.998 C 311.740 59.092,311.294 58.894,310.750 58.557 C 310.205 58.221,309.760 58.034,309.760 58.142 C 309.760 58.251,309.441 58.131,309.052 57.876 C 308.663 57.621,308.345 57.483,308.345 57.568 C 308.345 57.653,307.963 57.526,307.496 57.284 C 307.030 57.043,306.648 56.917,306.648 57.004 C 306.648 57.091,306.361 57.005,306.011 56.813 C 305.661 56.620,305.248 56.432,305.092 56.395 C 304.936 56.358,304.522 56.263,304.171 56.185 C 303.821 56.107,303.408 55.965,303.253 55.870 C 303.099 55.774,302.717 55.640,302.406 55.571 C 302.094 55.502,301.584 55.389,301.272 55.320 C 300.960 55.251,300.579 55.117,300.424 55.021 C 300.270 54.926,299.888 54.791,299.577 54.722 C 299.265 54.653,298.723 54.526,298.373 54.440 C 298.023 54.354,297.482 54.237,297.171 54.180 C 296.860 54.123,296.287 53.996,295.898 53.897 C 295.509 53.799,294.936 53.663,294.625 53.595 C 294.314 53.526,293.741 53.398,293.352 53.311 C 292.963 53.224,292.199 53.101,291.655 53.039 C 291.110 52.977,290.347 52.850,289.958 52.756 C 288.706 52.455,287.867 52.324,286.421 52.202 C 285.644 52.136,284.434 52.013,283.734 51.929 C 282.094 51.730,269.625 51.545,269.453 51.716 M124.891 163.861 L 120.368 168.458 124.965 163.935 C 127.493 161.448,129.562 159.379,129.562 159.339 C 129.562 159.137,129.092 159.591,124.891 163.861 M82.037 206.648 L 68.036 220.651 81.754 234.371 C 89.299 241.917,95.600 248.091,95.757 248.091 C 96.128 248.091,123.621 220.595,123.621 220.224 C 123.621 219.946,96.455 192.645,96.179 192.645 C 96.101 192.645,89.737 198.946,82.037 206.648 M148.232 272.843 L 134.231 286.847 149.851 302.467 L 165.472 318.088 179.412 304.235 C 187.079 296.616,193.400 290.271,193.458 290.135 C 193.556 289.908,162.699 258.840,162.376 258.840 C 162.297 258.840,155.932 265.142,148.232 272.843 M180.055 312.093 L 172.702 319.519 180.127 312.166 C 187.028 305.333,187.681 304.668,187.480 304.668 C 187.440 304.668,184.099 308.009,180.055 312.093 \",\n  stroke: \"none\",\n  fill: \"#d36314\",\n  fillRule: \"evenodd\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"path2\",\n  d: \"M149.646 139.321 L 133.947 155.022 199.717 220.792 C 235.891 256.966,265.637 286.563,265.819 286.563 C 266.568 286.563,297.028 255.688,296.758 255.203 C 296.615 254.948,266.989 225.237,230.922 189.179 L 165.345 123.620 149.646 139.321 \",\n  stroke: \"none\",\n  fill: \"#cc0c0c\",\n  fillRule: \"evenodd\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"path3\",\n  d: \"M114.993 173.811 L 100.283 188.357 166.195 254.292 C 202.447 290.556,232.195 320.226,232.301 320.226 C 232.408 320.226,239.070 313.649,247.105 305.611 L 261.714 290.995 195.851 225.130 C 159.626 188.904,129.923 159.265,129.845 159.265 C 129.767 159.266,123.083 165.811,114.993 173.811 \",\n  stroke: \"none\",\n  fill: \"#e43c3c\",\n  fillRule: \"evenodd\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"path4\",\n  d: \"M124.659 51.673 C 124.564 51.768,123.050 51.880,121.296 51.921 C 118.279 51.993,115.481 52.198,113.579 52.489 C 113.112 52.560,112.157 52.682,111.457 52.759 C 110.757 52.837,109.866 52.958,109.477 53.027 C 109.088 53.097,108.359 53.214,107.858 53.288 C 107.357 53.362,106.829 53.495,106.686 53.583 C 106.543 53.671,105.935 53.818,105.335 53.909 C 104.734 54.000,103.964 54.116,103.623 54.167 C 103.282 54.219,102.871 54.342,102.711 54.441 C 102.551 54.540,101.964 54.679,101.408 54.750 C 100.851 54.822,100.012 55.079,99.542 55.321 C 99.073 55.564,98.539 55.713,98.356 55.652 C 98.173 55.591,97.284 55.841,96.381 56.209 C 95.478 56.576,94.618 56.801,94.470 56.710 C 94.322 56.618,94.201 56.686,94.201 56.860 C 94.201 57.034,94.074 57.098,93.918 57.001 C 93.762 56.905,93.635 56.969,93.635 57.143 C 93.635 57.317,93.523 57.390,93.385 57.305 C 93.105 57.132,84.778 60.536,84.629 60.884 C 84.577 61.007,84.418 61.035,84.276 60.947 C 84.133 60.859,84.017 60.905,84.017 61.050 C 84.017 61.319,80.651 62.934,80.269 62.848 C 80.152 62.822,80.057 62.935,80.057 63.099 C 80.057 63.263,79.420 63.662,78.642 63.986 C 77.864 64.309,77.228 64.668,77.228 64.784 C 77.228 64.900,76.814 65.162,76.308 65.366 C 75.803 65.571,75.287 65.904,75.163 66.108 C 75.038 66.311,74.821 66.478,74.680 66.478 C 74.458 66.478,72.834 67.459,71.994 68.101 C 71.839 68.220,71.139 68.697,70.438 69.161 C 69.738 69.625,68.885 70.294,68.543 70.646 C 68.200 70.999,67.818 71.288,67.694 71.288 C 67.570 71.289,67.016 71.703,66.463 72.208 C 65.910 72.713,65.038 73.444,64.525 73.833 C 64.011 74.222,62.564 75.527,61.309 76.733 C 60.054 77.938,58.900 78.925,58.745 78.925 C 58.590 78.925,58.528 78.990,58.607 79.069 C 58.685 79.147,57.847 80.149,56.744 81.294 C 55.641 82.439,54.262 83.934,53.680 84.616 C 53.097 85.298,52.235 86.301,51.763 86.846 C 50.571 88.221,45.827 94.980,45.827 95.303 C 45.827 95.449,45.726 95.611,45.601 95.662 C 45.404 95.745,43.334 99.232,43.027 100.000 C 42.965 100.156,42.837 100.347,42.744 100.424 C 42.125 100.940,36.775 112.787,36.775 113.642 C 36.775 113.845,36.665 114.232,36.530 114.502 C 36.091 115.382,34.984 118.834,34.512 120.792 C 34.381 121.337,34.082 122.546,33.847 123.479 C 33.613 124.413,33.292 125.877,33.135 126.733 C 32.978 127.588,32.659 129.307,32.426 130.552 C 30.995 138.195,31.043 154.337,32.516 161.076 C 32.655 161.713,32.913 162.999,33.089 163.932 C 34.676 172.347,38.590 182.920,43.142 191.089 C 43.576 191.867,44.071 192.758,44.243 193.069 C 44.415 193.380,44.969 194.231,45.474 194.959 C 45.980 195.687,46.393 196.369,46.393 196.474 C 46.393 196.579,46.775 197.148,47.242 197.737 C 47.709 198.326,48.091 198.893,48.091 198.996 C 48.091 199.228,49.898 201.577,52.303 204.472 C 53.297 205.669,56.288 208.844,58.949 211.529 L 63.787 216.410 87.976 192.287 C 101.279 179.019,115.347 165.025,119.236 161.189 C 123.126 157.353,141.966 138.537,161.103 119.376 L 195.898 84.538 189.572 78.322 C 186.092 74.903,183.178 72.173,183.096 72.255 C 183.014 72.338,182.207 71.764,181.303 70.981 C 180.399 70.198,179.620 69.597,179.571 69.645 C 179.522 69.692,178.671 69.095,177.681 68.317 C 176.691 67.539,175.861 66.966,175.836 67.044 C 175.811 67.122,175.255 66.761,174.600 66.242 C 173.945 65.723,173.409 65.388,173.409 65.498 C 173.409 65.607,172.963 65.357,172.419 64.941 C 171.874 64.526,171.429 64.262,171.429 64.356 C 171.429 64.449,170.856 64.131,170.156 63.649 C 169.455 63.168,168.883 62.852,168.883 62.948 C 168.883 63.044,168.513 62.859,168.061 62.537 C 167.609 62.215,167.129 61.952,166.995 61.952 C 166.861 61.952,166.276 61.629,165.695 61.234 C 165.114 60.840,164.639 60.600,164.639 60.701 C 164.639 60.803,164.321 60.677,163.932 60.422 C 163.543 60.167,163.225 60.030,163.225 60.117 C 163.225 60.203,162.938 60.115,162.588 59.921 C 162.238 59.727,161.888 59.558,161.810 59.546 C 161.733 59.534,161.255 59.303,160.750 59.033 C 160.244 58.763,159.830 58.613,159.830 58.698 C 159.830 58.783,159.512 58.645,159.123 58.390 C 158.734 58.135,158.416 58.019,158.416 58.133 C 158.416 58.247,158.088 58.125,157.688 57.862 C 157.287 57.600,156.714 57.331,156.415 57.264 C 156.115 57.197,155.640 57.091,155.359 57.028 C 155.079 56.965,154.347 56.700,153.733 56.440 C 152.668 55.987,152.358 55.890,151.060 55.603 C 150.748 55.534,150.367 55.400,150.212 55.304 C 149.886 55.103,149.051 54.908,147.698 54.717 C 147.170 54.643,146.630 54.514,146.496 54.432 C 146.261 54.286,145.575 54.110,144.413 53.897 C 144.102 53.840,143.529 53.712,143.140 53.614 C 142.103 53.351,141.187 53.200,139.647 53.036 C 138.893 52.956,138.019 52.752,137.704 52.584 C 137.259 52.346,137.180 52.357,137.350 52.632 C 137.500 52.875,137.455 52.916,137.208 52.763 C 137.008 52.640,136.320 52.491,135.679 52.433 C 135.037 52.374,134.003 52.271,133.380 52.203 C 132.758 52.135,130.709 52.029,128.827 51.967 C 126.946 51.906,125.277 51.776,125.119 51.678 C 124.961 51.580,124.754 51.578,124.659 51.673 M184.824 104.074 L 169.507 119.464 235.036 185.077 C 271.078 221.165,300.775 250.803,301.030 250.940 C 301.492 251.188,331.957 221.142,331.761 220.631 C 331.718 220.520,302.086 190.786,265.912 154.557 L 200.141 88.685 184.824 104.074 \",\n  stroke: \"none\",\n  fill: \"#b40909\",\n  fillRule: \"evenodd\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"path5\",\n  d: \"M189.524 91.018 L 187.977 92.645 189.604 91.099 C 190.499 90.248,191.231 89.516,191.231 89.472 C 191.231 89.262,190.960 89.507,189.524 91.018 M167.043 113.508 L 146.676 133.946 167.115 113.579 C 186.114 94.646,187.680 93.069,187.482 93.069 C 187.442 93.069,178.245 102.267,167.043 113.508 \",\n  stroke: \"none\",\n  fill: \"#b82d2d\",\n  fillRule: \"evenodd\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"path6\",\n  d: \"M187.269 101.485 L 174.682 114.144 187.341 101.557 C 194.303 94.634,200.000 88.937,200.000 88.898 C 200.000 88.699,198.968 89.719,187.269 101.485 M171.705 117.044 L 169.307 119.519 171.782 117.121 C 173.144 115.802,174.257 114.688,174.257 114.646 C 174.257 114.440,173.933 114.745,171.705 117.044 M176.803 126.874 C 180.769 130.842,184.076 134.088,184.154 134.088 C 184.232 134.088,181.051 130.842,177.086 126.874 C 173.121 122.907,169.813 119.661,169.735 119.661 C 169.658 119.661,172.838 122.907,176.803 126.874 M149.504 139.250 L 133.946 154.880 149.576 139.322 C 164.104 124.861,165.332 123.621,165.133 123.621 C 165.094 123.621,158.061 130.654,149.504 139.250 M137.622 142.928 L 128.571 152.051 137.694 143.000 C 142.712 138.022,146.818 133.917,146.818 133.877 C 146.818 133.678,146.033 134.449,137.622 142.928 M300.283 188.967 C 301.677 190.368,302.881 191.513,302.959 191.513 C 303.036 191.513,301.960 190.368,300.566 188.967 C 299.172 187.567,297.968 186.421,297.890 186.421 C 297.812 186.421,298.889 187.567,300.283 188.967 M307.072 195.757 C 308.778 197.468,310.238 198.868,310.316 198.868 C 310.393 198.868,309.061 197.468,307.355 195.757 C 305.649 194.045,304.189 192.645,304.111 192.645 C 304.034 192.645,305.366 194.045,307.072 195.757 M321.358 210.042 C 327.035 215.721,331.744 220.368,331.822 220.368 C 331.899 220.368,327.318 215.721,321.641 210.042 C 315.963 204.364,311.255 199.717,311.177 199.717 C 311.099 199.717,315.681 204.364,321.358 210.042 \",\n  stroke: \"none\",\n  fill: \"#ba2424\",\n  fillRule: \"evenodd\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"path7\",\n  d: \"M246.959 135.644 C 259.639 148.324,270.076 158.699,270.154 158.699 C 270.232 158.699,259.921 148.324,247.242 135.644 C 234.562 122.963,224.124 112.588,224.047 112.588 C 223.969 112.588,234.279 122.963,246.959 135.644 M92.786 187.482 L 73.409 206.931 92.857 187.554 C 103.554 176.897,112.306 168.145,112.306 168.105 C 112.306 167.907,110.798 169.403,92.786 187.482 \",\n  stroke: \"none\",\n  fill: \"#ac1111\",\n  fillRule: \"evenodd\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"path8\",\n  d: \"M192.207 88.331 L 191.089 89.533 192.291 88.415 C 192.953 87.800,193.494 87.259,193.494 87.213 C 193.494 86.999,193.247 87.213,192.207 88.331 M283.876 172.560 C 291.498 180.184,297.798 186.421,297.876 186.421 C 297.954 186.421,291.781 180.184,284.158 172.560 C 276.536 164.936,270.236 158.699,270.158 158.699 C 270.080 158.699,276.253 164.936,283.876 172.560 M67.889 212.376 L 63.791 216.549 67.963 212.451 C 71.839 208.644,72.264 208.204,72.061 208.204 C 72.020 208.204,70.143 210.081,67.889 212.376 \",\n  stroke: \"none\",\n  fill: \"#ac1c1c\",\n  fillRule: \"evenodd\"\n}));\n\nfunction SvgOnela(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 400,\n    height: 400,\n    viewBox: \"0, 0, 400,400\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOnela);\nexport default __webpack_public_path__ + \"static/media/Onela.fb97a59c.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\n\r\nimport { ReactComponent as BotIcon } from \"../../assets/icons/Onela.svg\";\r\n\r\nconst BotAvatar = () => {\r\n  return (\r\n    <div className=\"react-chatbot-kit-chat-bot-avatar\">\r\n      <div className=\"react-chatbot-kit-chat-bot-avatar-container\">\r\n        <BotIcon className=\"react-chatbot-kit-chat-bot-avatar-icon\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BotAvatar;","// Config starter code\r\nimport React from \"react\";\r\nimport { createChatBotMessage } from \"react-chatbot-kit\";\r\n\r\nimport HelpingOptions from \"./components/HelpingOptions/HelpingOptions\";\r\nimport LinkList from \"./components/LinkList/LinkList\";\r\nimport BotAvatar from \"./components/BotAvatar/BotAvatar\";\r\n\r\n\r\nconst botName = \"OnelaBot\";\r\nconst config = { \r\n\tbotName: botName,\r\n\tinitialMessages: [\r\n\t\tcreateChatBotMessage(\r\n\t\t\t`Bonjour je suis ${botName}. Je suis ici pour vous aider.`\r\n\t\t),\r\n\t\tcreateChatBotMessage(\r\n\t\t\t\"Dans quel domaine voulez-vous de l'aide?\", \r\n\t\t\t{\r\n\t\t\t\twithAvatar: false,\r\n\t\t\t\tdelay: 600,\r\n\t\t\t\twidget: \"helpingOptions\",\r\n\t\t\t}\r\n\t\t),\r\n\t],\r\n\t//Add avatar\r\n\tcustomComponents: {\r\n\t\t// Replaces default header\r\n\t\theader: () => <div class=\"react-chatbot-kit-chat-header\">Conversation avec {botName}</div>,\r\n\t\t// Replaces default avatar\r\n\t\tbotAvatar: (props) => <BotAvatar {...props} />,\r\n\r\n\t},\r\n\tcustomStyles: {\r\n\t\tbotMessageBox: {\r\n\t\t\tbackgroundColor: \"#3399ff\",\r\n\t\t},\r\n\t\tchatButton: {\r\n\t\t\tbackgroundColor: \"#00b33c\",\r\n\t\t},\r\n\t},\r\n\twidgets: [\r\n\t\t{\r\n\t\t\twidgetName: \"helpingOptions\",\r\n\t\t   widgetFunc: (props) => <HelpingOptions {...props} />,\r\n\t\t},\r\n\t\t{\r\n\t\t\twidgetName: \"AlimentationLinks\",\r\n\t\t\twidgetFunc: (props) => <LinkList {...props} />,\r\n\t\t\tprops: {\r\n\t\t\t\toptions: [\r\n\t\t\t\t  {\r\n\t\t\t\t\ttext: \"Les AGORAé\",\r\n\t\t\t\t\turl:\r\n\t\t\t\t\t  \"https://www.fage.org/innovation-sociale/solidarite-etudiante/agorae-fage/\",\r\n\t\t\t\t\tid: 1,\r\n\t\t\t\t  },\r\n\t\t\t\t  {\r\n\t\t\t\t\ttext: \"Restos du Coeur\",\r\n\t\t\t\t\turl:\r\n\t\t\t\t\t  \"https://www.restosducoeur.org/nos-actions/aide-alimentaire/\",\r\n\t\t\t\t\tid: 2,\r\n\t\t\t\t  },\r\n\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t},\r\n\t],\r\n}\r\n\r\nexport default config","import React, { useState } from 'react';\nimport Chatbot from 'react-chatbot-kit';\nimport Image from './assets/icons/robotic.svg';\nimport './App.css';\n\nimport ActionProvider from './ActionProvider';\nimport MessageParser from './MessageParser';\nimport config from './config';\n\nfunction App() {\n  \n  const [showBot, toggleBot] = useState(true);\n\n  return (\n    <div className=\"App\">\n      {showBot && (\n        <div className=\"App-container\">\n          <Chatbot \n            config={config} \n            actionProvider={ActionProvider}\n            messageParser={MessageParser} \n            placeholderText=\"Écrivez ici\"\n          />\n        </div>\n      )}\n      <button className=\"app-chatbot-button\" onClick={() => toggleBot((prev) => !prev)}>\n        <img src={Image} alt=\"\" className=\"app-chatbot-button-icon\" />\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}